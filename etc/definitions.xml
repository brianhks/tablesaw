<?xml version="1.0" ?>
<!--<!DOCTYPE definitions SYSTEM "definitions.dtd">-->

<!-- <definitions xmlns="http://www.cpmake.org" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.cpmake.org ../schema/definitions.xsd"> -->
<definitions xmlns="http://www.cpmake.org" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	
	<definition name="sun_javac" command="javac">
		
		<mode>debug</mode>
		<mode>release</mode>
		
		<property name="compiler">Sun Java</property>
		
		<option name="deprecation">-deprecation</option>
		<option name="unchecked">-Xlint:unchecked</option>
		<option name="fallthrough">-Xlint:fallthrough</option>
		<option name="path" >-Xlint:path</option>
		<option name="serial" >-Xlint:serial</option>
		<option name="finally">-Xlint:finally</option>
		<option name="lintall">-Xlint:all</option>
		
		<option name="source" pattern="(.+)">-source $1</option>
		<option name="target" pattern="(.+)">-target $1</option>
		
		<option name="classpath" 
				pattern="(.+)">-classpath $1</option>
				
		<option name="class_dir" pattern="(.+)">-d $1</option>
				
		<option name="sourcepath" pattern="(.+)">-sourcepath $1</option>
				
		<option name="encoding" pattern="(.+)">-encoding $1</option>
				
		<option mode="debug">-g</option>
		<option mode="release">-g:none</option>
		       
		<option name="sourcefile" pattern="(.+)">$1</option>
		
	</definition>

	<!-- =================================================================== -->
	<definition name="sun_jar" command="jar">
		<option name="create_with_manifest">-cfm</option>
		<option name="create_no_manifest">-cf</option>
		<option name="jar_file" pattern="(.+)">$1</option>
		<option name="manifest" pattern="(.+)">$1</option>
		<group name="inc_sub_file">
			<option pattern="(.+)">-C "$1"</option>
			<option pattern="(.+)">"$1"</option>
		</group>
		<option name="inc_file" pattern="(.+)">"$1"</option>
	</definition>	
	
	<!-- =================================================================== -->
	<definition name="sun_javadoc" command="javadoc">
		<option name="classpath" pattern="(.+)">-classpath $1</option>
		<option name="public">-public</option>
		<option name="destination" pattern="(.+)">-d $1</option>
		<option name="source" pattern="(.+)">$1</option>
	</definition>
	
	<!-- =================================================================== -->
	<definition name="junit4" command="java">
		<option name="jvm_arg" pattern="(.*)">$1</option>
		<option name="debug" pattern="(.+)">-Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=$1</option>
		<option name="classpath" pattern="(.+)">-cp $1</option>
		<option>org.junit.runner.JUnitCore</option>
		<option name="test_class" pattern="(.+)">$1</option>
	</definition>

	<!-- =================================================================== -->
	<definition name="microsoft_cs_compiler" command="csc">
		
		<option name="out" pattern="(.+)" fix_slash="true">/out:$1</option>		<!-- Specify output file name (default: base name of file with main class or first file) -->
		<option name="target" pattern="(.+)">/target:$1</option>      <!-- Specify target (exe, winexe, library or module) Build a console executable (default) (Short form: /t:exe) -->
		<!-- <option name="" pattern="(.+)">/delaysign[+|-]                Delay-sign the assembly using only the public portion of the strong name key
		<option name="doc" pattern="(.+)">/doc:<file>                    XML Documentation file to generate
		<option name="" pattern="(.+)">/keyfile:<file>                Specify a strong name key file
		<option name="" pattern="(.+)">/keycontainer:<string>         Specify a strong name key container -->
		<option name="platform" pattern="(.+)">/platform:$1</option>  <!-- Limit which platforms this code can run on: x86, Itanium, x64, or anycpu. The default is anycpu. -->
		<!-- <option name="" pattern="(.+)">/reference:<alias>=<file>      Reference metadata from the specified assembly file using the given alias (Short form: /r)
		<option name="" pattern="(.+)">/reference:<file list>         Reference metadata from the specified assembly files (Short form: /r)
		<option name="" pattern="(.+)">/addmodule:<file list>         Link the specified modules into this assembly -->
		<!-- <option name="" pattern="(.+)">/win32res:<file>               Specify a Win32 resource file (.res)
		<option name="" pattern="(.+)">/win32icon:<file>              Use this icon for the output
		<option name="" pattern="(.+)">/win32manifest:<file>          Specify a Win32 manifest file (.xml)
		<option name="" pattern="(.+)">/nowin32manifest               Do not include the default Win32 manifest
		<option name="" pattern="(.+)">/resource:<resinfo>            Embed the specified resource (Short form: /res)
		<option name="" pattern="(.+)">/linkresource:<resinfo>        Link the specified resource to this assembly (Short form: /linkres)
		<option name="" pattern="(.+)">							   Where the resinfo format is <file>[,<string name>[,public|private]] -->
		<!-- <option name="" pattern="(.+)">/debug[+|-]                    Emit debugging information
		<option name="" pattern="(.+)">/debug:{full|pdbonly}          Specify debugging type ('full' is default, and enables attaching a debugger to a running program)
		<option name="" pattern="(.+)">/optimize[+|-]                 Enable optimizations (Short form: /o)
		<option name="" pattern="(.+)">/warnaserror[+|-]              Report all warnings as errors
		<option name="" pattern="(.+)">/warnaserror[+|-]:<warn list>  Report specific warnings as errors -->
		<option name="warn" pattern="(.+)">/warn:$1</option>          <!-- Set warning level (0-4) (Short form: /w) -->
		<!-- <option name="" pattern="(.+)">/nowarn:<warn list>            Disable specific warning messages -->
		<option name="checked">/checked+</option>                     <!-- Generate overflow checks -->
		<option name="unsafe">/unsafe+</option>                       <!-- Allow 'unsafe' code -->
		<!-- <option name="" pattern="(.+)">/define:<symbol list>          Define conditional compilation symbol(s) (Short form: /d)
		<option name="" pattern="(.+)">/langversion:<string>          Specify language version mode: ISO-1, ISO-2, or Default -->
		<option name="nologo">/nologo</option>                        <!-- Suppress compiler copyright message -->
		<!-- <option name="" pattern="(.+)">/noconfig                      Do not auto include CSC.RSP file
		<option name="" pattern="(.+)">/baseaddress:<address>         Base address for the library to be built
		<option name="" pattern="(.+)">/bugreport:<file>              Create a 'Bug Report' file
		<option name="" pattern="(.+)">/codepage:<n>                  Specify the codepage to use when opening source files
		<option name="" pattern="(.+)">/utf8output                    Output compiler messages in UTF-8 encoding
		<option name="" pattern="(.+)">/main:<type>                   Specify the type that contains the entry point (ignore all other possible entry points) (Short form: /m)
		<option name="" pattern="(.+)">/fullpaths                     Compiler generates fully qualified paths
		<option name="" pattern="(.+)">/filealign:<n>                 Specify the alignment used for output file sections -->
		<!-- <option name="" pattern="(.+)">/pdb:<file>                    Specify debug information file name (default: output file name with .pdb extension)
		<option name="" pattern="(.+)">/nostdlib[+|-]                 Do not reference standard library (mscorlib.dll)
		<option name="" pattern="(.+)">/lib:<file list>               Specify additional directories to search in for references
		<option name="" pattern="(.+)">/errorreport:<string>          Specify how to handle internal compiler errors: prompt, send, queue, or none. The default is queue.
		<option name="" pattern="(.+)">/moduleassemblyname:<string>   Name of the assembly which this module will be a part of -->
		
		<option name="sourcefile" pattern="(.+)" fix_slash="true">$1</option>
	
	</definition>
	
	<!-- =================================================================== -->
	<definition name="linux-notify" command="notify-send">
		<option name="title" pattern="(.+)">"$1"</option>
		<option name="message" pattern="(.+)">"$1"</option>
	</definition>
		
</definitions>
